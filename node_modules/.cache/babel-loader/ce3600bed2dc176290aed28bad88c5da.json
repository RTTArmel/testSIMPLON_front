{"ast":null,"code":"import _objectSpread from \"/home/dev/Bureau/Pr\\xE9-testSIMPLON/pre-test_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/dev/Bureau/Pr\\xE9-testSIMPLON/pre-test_front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dev/Bureau/Pr\\xE9-testSIMPLON/pre-test_front/src/components/article.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport './article.css';\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\n\nclass Article extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.state = {\n      reponse: \"\",\n      comment: [],\n      modal: false\n    };\n  }\n\n  componentDidMount() {\n    var tab = [];\n    console.log('props: ', this.props);\n    axios.get(\"http://localhost:8080/profil\").then(res => {\n      console.log('res comment: ', res.data);\n\n      for (let i = 0; i < res.data.length; i++) {\n        if (localStorage.getItem('id') == res.data[i].utilisateur) {\n          tab.push(res.data[i]);\n        }\n      }\n\n      this.setState({\n        comment: tab\n      });\n      console.log('comment: ', this.state.comment);\n    });\n  }\n\n  render() {\n    const initial = {\n      id: null,\n      prod: '',\n      prix: ''\n    };\n\n    const _useState = useState(initial),\n          _useState2 = _slicedToArray(_useState, 2),\n          user = _useState2[0],\n          setUser = _useState2[1];\n\n    const changed = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      setUser(_objectSpread({}, user, {\n        [name]: value\n      }));\n    };\n\n    return (// AJOUT\n      React.createElement(\"center\", {\n        onSubmit: event => {\n          event.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Nom du produit\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Prix\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, props.users.length > 0 ? props.users.map(user => React.createElement(\"tr\", {\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, user.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, user.prod), React.createElement(\"td\", {\n        id: \"prix\",\n        onChange: changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, user.prix), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => {\n          confirmAlert({\n            customUI: ({\n              onClose\n            }) => {\n              return React.createElement(\"center\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 80\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"custom-ui\",\n                id: \"popup\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 81\n                },\n                __self: this\n              }, React.createElement(\"h6\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 82\n                },\n                __self: this\n              }, \"Suppression Produit\"), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 82\n                },\n                __self: this\n              }), React.createElement(\"h6\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83\n                },\n                __self: this\n              }, user.prod), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 83\n                },\n                __self: this\n              }), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: () => {\n                  props.deleteUser(user.id); //Appel de la fonction deleteUser App.js\n\n                  onClose();\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84\n                },\n                __self: this\n              }, \"OUI\"), React.createElement(\"a\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 91\n                },\n                __self: this\n              }, \"\\xA0\\xA0\"), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: onClose,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 92\n                },\n                __self: this\n              }, \"NON\")));\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => {\n          confirmAlert({\n            customUI: ({\n              onClose\n            }) => {\n              return React.createElement(\"form\", {\n                id: \"ID_FORMULAIRE\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 108\n                },\n                __self: this\n              }, React.createElement(\"center\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 109\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"custom-ui\",\n                id: \"popup\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 110\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                name: \"inputStoreID\",\n                placeholder: user.prix,\n                id: \"entree\",\n                className: \"modif\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 111\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 111\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                id: \"e\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 112\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 112\n                },\n                __self: this\n              }), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: e => {\n                  user.prix = document.forms['ID_FORMULAIRE'].elements['inputStoreID'].value; //Affectation du contenu de l'input dans user.prix \n\n                  if (isNaN(user.prix) || user.prix == \"\") {\n                    var valid = \"Entrer un Nombre\";\n                    e.preventDefault();\n                    document.getElementById('e').innerHTML = valid; //Affichage de la variable valid dans le paragraphe e\n                  } else {\n                    valid = \"\";\n                    document.getElementById('e').innerHTML = valid;\n                    props.updateUser(user.prix, user); //Appel de la fonction updateUser App.js\n\n                    props.editRow(user.id); //Appel de la fonction editRow App.js\n\n                    onClose();\n                  }\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 114\n                },\n                __self: this\n              }, \"OK\"), React.createElement(\"a\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 130\n                },\n                __self: this\n              }, \"\\xA0\\xA0\"), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: onClose,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 132\n                },\n                __self: this\n              }, \"Annuler\"))));\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Edit\")))) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))))) // <div className='container'>\n      //     <div className='row' card>\n      //         {this.state.comment.length > 0 ? (this.state.comment.sort((a, b) => { return b._id - a._id }).map(article => {\n      //             console.log('article-image: ', article._id);\n      //             return (\n      //                 <div className='col-md-5 carte' key={this.state.comment._id}>\n      //                     <div className=\"card\">\n      //                         <button onClick={this.toggle}><img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + article.image} alt={article.titre} /></button>\n      //                         <div class=\"card-body\">\n      //                             <center>\n      //                                 <h5 class=\"card-title\">{article.titre}</h5>\n      //                                 <p class=\"test\">{article.prix}</p>\n      //                             </center>\n      //                         </div>\n      //                         <MDBContainer>\n      //                             <MDBModal isOpen={this.state.modal}>\n      //                                 <MDBModalHeader>{this.props.titre}</MDBModalHeader>\n      //                                 <MDBModalBody>\n      //                                     <center>\n      //                                         <img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + article.image} alt={article.titre} />\n      //                                         <p>{article.description}</p>\n      //                                         <p>{article.prix}</p>\n      //                                     </center>\n      //                                 </MDBModalBody>\n      //                                 <MDBModalFooter>\n      //                                     <MDBBtn color=\"secondary\" onClick={() => { this.toggle() }}>Close</MDBBtn>\n      //                                 </MDBModalFooter>\n      //                             </MDBModal>\n      //                         </MDBContainer>\n      //                     </div>\n      //                     <br />\n      //                 </div>\n      //             )\n      //         }\n      //         )) : ''}\n      //     </div>\n      // </div>\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listeArticle: state\n  };\n};\n\nexport default connect(mapStateToProps)(Article);","map":{"version":3,"sources":["/home/dev/Bureau/Pré-testSIMPLON/pre-test_front/src/components/article.jsx"],"names":["React","Component","connect","axios","MDBContainer","MDBInput","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","Article","constructor","props","toggle","setState","modal","state","reponse","comment","componentDidMount","tab","console","log","get","then","res","data","i","length","localStorage","getItem","utilisateur","push","render","initial","id","prod","prix","useState","user","setUser","changed","event","target","name","value","preventDefault","users","map","confirmAlert","customUI","onClose","deleteUser","e","document","forms","elements","isNaN","valid","getElementById","innerHTML","updateUser","editRow","mapStateToProps","listeArticle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport './article.css'\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\n\nclass Article extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            reponse: \"\",\n            comment: [],\n            modal: false,\n        };\n    }\n\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal,\n        });\n    }\n\n    componentDidMount() {\n        var tab = []\n        console.log('props: ',this.props)\n        axios.get(\"http://localhost:8080/profil\").then(res => {\n            console.log('res comment: ', res.data)\n            for (let i = 0; i < res.data.length; i++) {\n                if (localStorage.getItem('id') == res.data[i].utilisateur) {\n                    tab.push(res.data[i])\n                }\n            }\n            this.setState({ comment: tab })\n            console.log('comment: ', this.state.comment)\n        })\n    }\n\n    \n    render() {\n        const initial = { id: null, prod: '', prix: '' }\n\n            const [ user, setUser ] = useState(initial)\n                  const changed = event => {\n          \n                     const { name, value } = event.target\n                  \n                     setUser({ ...user, [name]: value })\n               }\n\n        return (\n                                  // AJOUT\n                          <center onSubmit={event => {\n                            event.preventDefault()\n                          }}>\n                              <table className=\"table table-bordered\">\n                              <thead>\n                                  <tr className=\"tab\">\n                                      <th>Nom du produit</th>\n                                      <th>Description</th>\n                                      <th>Prix</th>\n                                      <th>Actions</th>\n                                  </tr>\n                              </thead>\n                              <tbody>\n                                  {props.users.length > 0 ? (\n                                  props.users.map(user => (\n                                          <tr key={user.id}>\n                                              <td>{user.id}</td>\n                                              <td>{user.prod}</td>\n                                              <td id=\"prix\" onChange={changed}>{user.prix}</td>\n                                              <td>\n                                {/* SUPPRESSION */}\n                                                  <button className=\"btn btn-danger\"\n                                                  onClick={ () => {\n                                                    confirmAlert({\n                                                      customUI: ({ onClose }) => {\n                                                        return (  \n                                                          <center>\n                                                          <div className=\"custom-ui\" id=\"popup\">\n                                                            <h6>Suppression Produit</h6><br/>\n                                                            <h6>{user.prod}</h6><br/>\n                                                            <button className=\"btn btn-dark\"\n                                                              onClick={() => {\n                                                                props.deleteUser(user.id); //Appel de la fonction deleteUser App.js\n                                                                onClose();\n                                                              }}\n                                                            >\n                                                              OUI\n                                                            </button><a>&nbsp;&nbsp;</a>\n                                                            <button  className=\"btn btn-dark\" onClick={onClose}>NON</button>\n                                                           </div>\n                                                           </center>\n                                                        );\n                                                      }\n                                                    })\n                                                  }\n                                                  }\n                                                  >X</button>\n                                                  <a>&nbsp;</a>\n                                  {/* MODIFICATION */}\n                                                  <button className=\"btn btn-success\"\n                                                    onClick={() => {\n                                                      confirmAlert({\n                                                          customUI: ({ onClose }) => {\n                                                            return (  \n                                                              <form id='ID_FORMULAIRE'>\n                                                                <center>\n                                                                  <div className=\"custom-ui\" id=\"popup\">\n                                                                    <input name='inputStoreID' placeholder={ user.prix } id=\"entree\" className=\"modif\"></input><br/>\n                                                                    <p id=\"e\"></p><br/>\n                                                                                                                        \n                                                                    <button className=\"btn btn-dark\"\n                                                                    onClick={(e) => {\n                                                                      user.prix = document.forms['ID_FORMULAIRE'].elements['inputStoreID'].value //Affectation du contenu de l'input dans user.prix \n                                                                        if (isNaN(user.prix) || user.prix==\"\") {\n                                                                          var valid = \"Entrer un Nombre\"\n                                                                          e.preventDefault()\n                                                                          document.getElementById('e').innerHTML= valid; //Affichage de la variable valid dans le paragraphe e\n                                                                        } else {\n                                                                          valid=\"\";\n                                                                          document.getElementById('e').innerHTML= valid;\n                                                                          props.updateUser(user.prix, user) //Appel de la fonction updateUser App.js\n                                                                          props.editRow(user.id); //Appel de la fonction editRow App.js\n                                                                          onClose();\n                                                                        }\n                                                                      }\n                                                                    } \n                                                                    >OK</button><a>&nbsp;&nbsp;</a>\n          \n                                                                    <button  className=\"btn btn-dark\" onClick={onClose}>Annuler</button>\n                                                                  </div>\n                                                                </center>\n                                                              </form>\n                                                            );\n                                                          }\n                                                        })\n                                                  }\n                                                }\n                                                   >Edit</button>\n                                              </td>\n                                          </tr>\n                                      ))\n                                  ) : (\n                                      <tr>\n                                          <td colSpan={4}></td>\n                                      </tr>\n                                  )}\n                              </tbody>\n                          </table>\n                          </center>\n\n\n\n\n\n            // <div className='container'>\n            //     <div className='row' card>\n            //         {this.state.comment.length > 0 ? (this.state.comment.sort((a, b) => { return b._id - a._id }).map(article => {\n            //             console.log('article-image: ', article._id);\n            //             return (\n            //                 <div className='col-md-5 carte' key={this.state.comment._id}>\n            //                     <div className=\"card\">\n            //                         <button onClick={this.toggle}><img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + article.image} alt={article.titre} /></button>\n            //                         <div class=\"card-body\">\n            //                             <center>\n            //                                 <h5 class=\"card-title\">{article.titre}</h5>\n            //                                 <p class=\"test\">{article.prix}</p>\n            //                             </center>\n            //                         </div>\n            //                         <MDBContainer>\n            //                             <MDBModal isOpen={this.state.modal}>\n            //                                 <MDBModalHeader>{this.props.titre}</MDBModalHeader>\n            //                                 <MDBModalBody>\n            //                                     <center>\n            //                                         <img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + article.image} alt={article.titre} />\n            //                                         <p>{article.description}</p>\n            //                                         <p>{article.prix}</p>\n            //                                     </center>\n            //                                 </MDBModalBody>\n            //                                 <MDBModalFooter>\n            //                                     <MDBBtn color=\"secondary\" onClick={() => { this.toggle() }}>Close</MDBBtn>\n            //                                 </MDBModalFooter>\n            //                             </MDBModal>\n            //                         </MDBContainer>\n            //                     </div>\n            //                     <br />\n            //                 </div>\n\n            //             )\n            //         }\n            //         )) : ''}\n            //     </div>\n            // </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        listeArticle: state\n    }\n}\n\nexport default connect(mapStateToProps)(Article)"]},"metadata":{},"sourceType":"module"}