{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/Pr\\xE9-testSIMPLON/pre-test_front/src/components/postupload.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport { Redirect } from 'react-router-dom';\n\nclass PostFrontToBack extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRedirect = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n      return React.createElement(Redirect, {\n        to: \"/admin/article\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    };\n\n    this.toggle = () => {\n      this.handleUploadImage();\n      this.setState({\n        modal: !this.state.modal,\n        titre: '',\n        description: '',\n        prix: '',\n        utilisateur: '',\n        image: '',\n        image1: '',\n        image2: ''\n      });\n    };\n\n    this.state = {\n      titre: '',\n      description: '',\n      utilisateur: '',\n      prix: '',\n      image: '',\n      image1: '',\n      image2: '',\n      modal: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n    this.renderRedirect = this.renderRedirect.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleUploadImage(ev) {\n    const data = new FormData();\n    data.append('image', this.uploadInput.files[0]);\n    data.append('image1', this.uploadInput.files[1]);\n    data.append('image2', this.uploadInput.files[2]);\n    data.append('titre', this.state.titre);\n    data.append('description', this.state.description);\n    data.append('prix', this.state.prix);\n    data.append('utilisateur', localStorage.getItem('id'));\n    fetch('http://localhost:8080/profil', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        this.setState({\n          image: \"http://localhost:8080/profil/\".concat(body.image)\n        });\n        console.log('ity ilay body.fil', body.image);\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container fluid w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      class: \"card\",\n      style: {\n        width: \"500px\",\n        marginLeft: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"card-header info-color white-text text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"NOUVEAU PRODUIT\")), React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      class: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Nom du Produit\",\n      icon: \"cart-arrow-down\",\n      id: \"un\",\n      type: \"text\",\n      className: \"input black-text\",\n      name: \"titre\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Descriptions\",\n      size: \"lg\",\n      icon: \"pencil-alt\",\n      id: \"ml\",\n      type: \"textarea\",\n      rows: \"3\",\n      className: \"input black-text\",\n      name: \"description\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Prix\",\n      size: \"lg\",\n      icon: \"hand-holding-usd\",\n      id: \"pw\",\n      type: \"number\",\n      className: \"input black-text\",\n      name: \"prix\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      type: \"file\",\n      name: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      type: \"file\",\n      name: \"image1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      type: \"file\",\n      name: \"image2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Ajouter\"), React.createElement(MDBModal, {\n      isOpen: this.state.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Enregistrement...\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Ajout du Produit avec succ\\xE9s\")), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: () => {\n        this.renderRedirect();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Close\"))))));\n  }\n\n}\n\nexport default PostFrontToBack;","map":{"version":3,"sources":["/home/dev/Bureau/Pr√©-testSIMPLON/pre-test_front/src/components/postupload.js"],"names":["React","Component","MDBContainer","MDBInput","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","Redirect","PostFrontToBack","constructor","props","renderRedirect","setState","modal","state","toggle","handleUploadImage","titre","description","prix","utilisateur","image","image1","image2","handleChange","bind","event","target","name","value","ev","data","FormData","append","uploadInput","files","localStorage","getItem","fetch","method","body","then","response","json","console","log","render","width","marginLeft","ref"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport { Redirect } from 'react-router-dom'\n\nclass PostFrontToBack extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            titre: '',\n            description: '',\n            utilisateur: '',\n            prix: '',\n            image: '',\n            image1: '',\n            image2: '',\n            modal: false\n        };\n        this.handleChange = this.handleChange.bind(this)\n        this.handleUploadImage = this.handleUploadImage.bind(this);\n        this.renderRedirect = this.renderRedirect.bind(this)\n    }\n\n    renderRedirect = () => {\n        this.setState({\n            modal: !this.state.modal,\n        })\n          return <Redirect to='/admin/article' />\n      }\n\n    toggle = () => {\n        this.handleUploadImage()\n        this.setState({\n            modal: !this.state.modal,\n            titre: '',\n            description: '',\n            prix: '',\n            utilisateur: '',\n            image: '',\n            image1: '',\n            image2: '',\n        });\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleUploadImage(ev) {\n        const data = new FormData();\n        data.append('image', this.uploadInput.files[0]);\n        data.append('image1', this.uploadInput.files[1]);\n        data.append('image2', this.uploadInput.files[2]);\n        data.append('titre', this.state.titre);\n        data.append('description', this.state.description);\n        data.append('prix', this.state.prix);\n        data.append('utilisateur', localStorage.getItem('id'))\n\n        fetch('http://localhost:8080/profil', {\n            method: 'POST',\n            body: data,\n        }).then((response) => {\n            response.json().then((body) => {\n                this.setState({ image: `http://localhost:8080/profil/${body.image}` });\n                console.log('ity ilay body.fil', body.image);\n            });\n        });\n    }\n\n    render() {\n        return (\n\n            <div className='container fluid w-100'> {/* //DEBUT */}\n\n                <div class=\"card\" style={{width: \"500px\", marginLeft:\"10%\"}}>\n\n                    <h5 class=\"card-header info-color white-text text-center\">\n                        <strong>NOUVEAU PRODUIT</strong>\n                    </h5>\n\n                    <div class=\"card-body\">\n\n                        <form class=\"text\">\n\n                            <MDBInput label=\"Nom du Produit\" icon=\"cart-arrow-down\" id=\"un\" type=\"text\" className=\"input black-text\" name=\"titre\" value={this.state.value} onChange={this.handleChange} />\n                            <MDBInput label=\"Descriptions\" size=\"lg\" icon=\"pencil-alt\" id=\"ml\" type=\"textarea\" rows=\"3\" className=\"input black-text\" name=\"description\" value={this.state.value} onChange={this.handleChange} />\n                            <MDBInput label=\"Prix\" size=\"lg\" icon=\"hand-holding-usd\" id=\"pw\" type=\"number\" className=\"input black-text\" name=\"prix\" value={this.state.value} onChange={this.handleChange} />\n                            {/* <MDBInput label=\"Utilisateur\" size=\"lg\" icon=\"at\" id=\"pw\" type=\"text\" className=\"input black-text\" name=\"utilisateur\" value={this.state.value} onChange={this.handleChange} /> */}\n                            <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" name=\"image\" />\n                            <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" name=\"image1\" />\n                            <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" name=\"image2\" />\n                            {/* <MDBBtn class=\"btn btn-outline-info btn-rounded btn-block my-4 waves-effect z-depth-0\" data-toggle=\"modal\" data-target=\"#modalLoginForm\" type=\"submit\">Publier</MDBBtn> */}\n                        </form>\n                    </div>\n                    <MDBContainer>\n                        <MDBBtn onClick={this.toggle}>Ajouter</MDBBtn>\n                        <MDBModal isOpen={this.state.modal}>\n                            <MDBModalHeader>Enregistrement...</MDBModalHeader>\n                            <MDBModalBody><center>Ajout du Produit avec succ√©s</center></MDBModalBody>\n                            <MDBModalFooter>\n                                <MDBBtn color=\"secondary\" onClick={()=>{this.renderRedirect()}}>Close</MDBBtn>\n                            </MDBModalFooter>\n                        </MDBModal>\n                    </MDBContainer>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PostFrontToBack;\n"]},"metadata":{},"sourceType":"module"}