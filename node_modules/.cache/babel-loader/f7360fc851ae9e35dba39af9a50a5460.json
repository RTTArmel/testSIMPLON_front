{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/Pr\\xE9-testSIMPLON/pre-test_front/src/components/dashBoard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nclass DashBoard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRedirect = () => {\n      if (localStorage.getItem('login') == 'false') {\n        return React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        });\n      } else {\n        console.log('test');\n      }\n    };\n\n    this.renderRedirect = this.renderRedirect.bind(this);\n    this.deconnection = this.deconnection.bind(this);\n  }\n\n  deconnection(e) {\n    console.log('local deconnection: ', localStorage.getItem('login'));\n    const action = {\n      type: \"DECONNECT\",\n      value: e\n    };\n    this.props.dispatch(action);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"dashBoard\"), React.createElement(\"button\", {\n      onClick: () => this.deconnection(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"deconnexion\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    client: state\n  };\n};\n\nexport default connect(mapStateToProps)(DashBoard);","map":{"version":3,"sources":["/home/dev/Bureau/PrÃ©-testSIMPLON/pre-test_front/src/components/dashBoard.js"],"names":["React","connect","Redirect","DashBoard","Component","constructor","props","renderRedirect","localStorage","getItem","console","log","bind","deconnection","e","action","type","value","dispatch","render","mapStateToProps","state","client"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,cANmB,GAMF,MAAM;AACnB,UAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAA+B,OAAlC,EAA0C;AACtC,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAEO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AAEJ,KAbkB;;AAEf,SAAKJ,cAAL,GAAsB,KAAKA,cAAL,CAAoBK,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAWDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApC;AACA,UAAMM,MAAM,GAAG;AAAEC,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,KAAK,EAAEH;AAA5B,KAAf;AACA,SAAKR,KAAL,CAAWY,QAAX,CAAoBH,MAApB;AACH;;AAGDI,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKZ,cAAL,EADL,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKM,YAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CAFJ,CADJ;AASH;;AAjCmC;;AAmCxC,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,MAAM,EAAED;AADL,GAAP;AAGH,CAJD;;AAKA,eAAepB,OAAO,CAACmB,eAAD,CAAP,CAAyBjB,SAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nclass DashBoard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.renderRedirect = this.renderRedirect.bind(this)\n        this.deconnection = this.deconnection.bind(this)\n    }\n\n    renderRedirect = () => {\n        if(localStorage.getItem('login')=='false'){\n            return <Redirect to='/login' />\n        } else {\n            console.log('test');\n        }\n        \n    }\n\n    deconnection(e) {\n        console.log('local deconnection: ', localStorage.getItem('login'));\n        const action = { type: \"DECONNECT\", value: e }\n        this.props.dispatch(action)\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.renderRedirect()}\n                <div>\n                    <p>dashBoard</p>\n                    <button onClick={() => this.deconnection()}>deconnexion</button>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        client: state\n    }\n}\nexport default connect(mapStateToProps)(DashBoard)"]},"metadata":{},"sourceType":"module"}