{"ast":null,"code":"import axios from 'axios';\nconst initialState = {\n  client: [{\n    nom: '',\n    prenom: '',\n    specialite: '',\n    email: '',\n    password: '',\n    pwd: ''\n  }]\n};\n\nfunction connexion(state = initialState, action) {\n  let nextState = [0];\n\n  switch (action.type) {\n    //postAdmin 8080\n    case 'REGISTER':\n      console.log(\"action: \", action.value);\n      axios.post('https://tsiorytahback.herokuapp.com/register/', action.value) // axios.post('http://localhost:8080/register/', action.value)\n      .then(response => {\n        console.log(\"post action: \", action.value);\n        console.log(\"post ok: res.data \", response.data);\n        localStorage.setItem('id', parseInt(response.data._id));\n        localStorage.setItem('user', response.data.nom);\n        localStorage.setItem('login', 'true');\n        console.log('reducer REGISTER: ', localStorage.getItem('login'));\n      }).catch(error => {\n        console.log(\"erreur be: \", error);\n      });\n      break;\n\n    case 'EDIT_PROFIL':\n      console.log(\"action: \", action.value);\n      axios.post('https://tsiorytahback.herokuapp.com/register/' + localStorage.getItem('id'), action.value) // axios.put(\"http://localhost:8080/register/\" + localStorage.getItem('id'), action.value)\n      .then(response => {\n        console.log(\"put ok: res.data \", response.data);\n        localStorage.setItem('user', response.data[localStorage.getItem('id')].nom);\n        console.log('reducer EDIT: ', localStorage.getItem('login'));\n      }).catch(error => {\n        console.log(\"erreur be: \", error);\n      });\n      break;\n    //postLogin 8080\n\n    case 'LOGIN':\n      console.log(\"action: \", action.value);\n      axios.post('https://tsiorytahback.herokuapp.com/login/', action.value) // axios.post('http://localhost:8080/login', action.value)\n      .then(response => {\n        if (response.data.nom == action.value.nom) {\n          localStorage.setItem('id', response.data._id);\n          localStorage.setItem('user', response.data.nom);\n          localStorage.setItem('login', 'true');\n          console.log('TSIORY response: ', response.data);\n        }\n\n        console.log(\"post ok: res.data \", response);\n      }).catch(error => {\n        console.log(\"erreur be: \", error);\n      });\n      break;\n\n    case 'DECONNECT':\n      localStorage.setItem('login', 'false');\n      break;\n\n    case 'GETARTICLE':\n      axios.post('https://tsiorytahback.herokuapp.com/') // axios.get('http://localhost:8080/')\n      .then(function (response) {\n        nextState = response.data;\n        console.log(\"ttt\", nextState);\n        return nextState;\n      }).catch(function (error) {\n        console.log(error);\n      });\n      break;\n\n    default:\n      return state;\n  }\n}\n\nexport default connexion;","map":{"version":3,"sources":["/home/dev/Bureau/EXAMEN/testSIMPLON_front/src/store/reducer/reducer_admin.js"],"names":["axios","initialState","client","nom","prenom","specialite","email","password","pwd","connexion","state","action","nextState","type","console","log","value","post","then","response","data","localStorage","setItem","parseInt","_id","getItem","catch","error"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst initialState = {\n  client: [{\n    nom: '',\n    prenom: '',\n    specialite: '',\n    email: '',\n    password: '',\n    pwd: ''\n  }]\n}\n\nfunction connexion(state = initialState, action) {\n  let nextState = [0]\n  switch (action.type) {\n\n    //postAdmin 8080\n    case 'REGISTER':\n      console.log(\"action: \", action.value);\n      axios.post('https://tsiorytahback.herokuapp.com/register/', action.value)\n        // axios.post('http://localhost:8080/register/', action.value)\n        .then((response) => {\n          console.log(\"post action: \", action.value);\n          console.log(\"post ok: res.data \", response.data);\n          localStorage.setItem('id', parseInt(response.data._id))\n          localStorage.setItem('user', response.data.nom)\n          localStorage.setItem('login', 'true')\n          console.log('reducer REGISTER: ', localStorage.getItem('login'));\n        })\n        .catch((error) => {\n          console.log(\"erreur be: \", error);\n        });\n      break;\n\n    case 'EDIT_PROFIL':\n      console.log(\"action: \", action.value);\n           axios.post('https://tsiorytahback.herokuapp.com/register/'+ localStorage.getItem('id'), action.value)\n      // axios.put(\"http://localhost:8080/register/\" + localStorage.getItem('id'), action.value)\n        .then((response) => {\n          console.log(\"put ok: res.data \", response.data);\n          localStorage.setItem('user', response.data[localStorage.getItem('id')].nom)\n          console.log('reducer EDIT: ', localStorage.getItem('login'));\n        })\n        .catch((error) => {\n          console.log(\"erreur be: \", error);\n        });\n      break;\n\n    //postLogin 8080\n    case 'LOGIN':\n      console.log(\"action: \", action.value);\n           axios.post('https://tsiorytahback.herokuapp.com/login/', action.value)\n      // axios.post('http://localhost:8080/login', action.value)\n        .then((response) => {\n          if (response.data.nom == action.value.nom) {\n            localStorage.setItem('id', response.data._id)\n            localStorage.setItem('user', response.data.nom)\n            localStorage.setItem('login', 'true')\n            console.log('TSIORY response: ', response.data);\n          }\n          console.log(\"post ok: res.data \", response);\n        })\n        .catch((error) => {\n          console.log(\"erreur be: \", error);\n        });\n      break;\n\n    case 'DECONNECT':\n      localStorage.setItem('login', 'false');\n      break;\n\n\n\n    case 'GETARTICLE':\n           axios.post('https://tsiorytahback.herokuapp.com/')\n      // axios.get('http://localhost:8080/')\n        .then(function (response) {\n          nextState = response.data\n          console.log(\"ttt\", nextState);\n          return nextState\n        })\n        .catch(function (error) {\n\n          console.log(error);\n        })\n      break;\n\n    default:\n      return state\n  }\n}\n\nexport default connexion\n"]},"metadata":{},"sourceType":"module"}