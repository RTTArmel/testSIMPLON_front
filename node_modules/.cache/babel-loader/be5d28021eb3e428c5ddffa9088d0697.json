{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/Pr\\xE9-testSIMPLON/pre-test_front/src/components/login.jsx\";\nimport React, { Fragment } from 'react';\nimport { MDBInput, MDBBtn } from \"mdbreact\";\nimport './register.css';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { BrowserRouter as Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRedirect = () => {\n      if (localStorage.getItem('login') == 'true') {\n        return React.createElement(Redirect, {\n          to: \"/admin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        });\n      } else {\n        console.log('test');\n      }\n    };\n\n    this.state = {\n      nom: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.login = this.login.bind(this);\n    this.renderRedirect = this.renderRedirect.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  login(e) {\n    console.log('local login: ', localStorage.getItem('login'));\n    const action = {\n      type: \"LOGIN\",\n      value: e\n    };\n    this.props.dispatch(action);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"totalregister\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-html\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"image-login\",\n      src: \"../images/logo.png\",\n      alt: \"logoimage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), this.renderRedirect(), React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        this.login({\n          nom: this.state.nom,\n          password: this.state.password\n        });\n        this.setState({\n          nom: '',\n          password: ''\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Nom\",\n      size: \"lg\",\n      icon: \"user\",\n      id: \"user\",\n      type: \"text\",\n      className: \"input\",\n      name: \"nom\",\n      onChange: this.handleChange,\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Password\",\n      size: \"lg\",\n      icon: \"lock\",\n      id: \"pass\",\n      type: \"passWord\",\n      className: \"input\",\n      name: \"password\",\n      onChange: this.handleChange,\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      rounded: true,\n      gradient: \"purple\",\n      className: \"button\",\n      id: \"boutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Se connecter\")))), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"S'inscrire\"))))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    client: state\n  };\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/home/dev/Bureau/Pr√©-testSIMPLON/pre-test_front/src/components/login.jsx"],"names":["React","Fragment","MDBInput","MDBBtn","connect","Redirect","BrowserRouter","Link","Login","Component","constructor","props","renderRedirect","localStorage","getItem","console","log","state","nom","password","handleChange","bind","login","e","setState","target","name","value","action","type","dispatch","render","preventDefault","mapStateToProps","client"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport { MDBInput, MDBBtn } from \"mdbreact\";\nimport './register.css'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { BrowserRouter as Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { nom: '', password: '' }\n        this.handleChange = this.handleChange.bind(this)\n        this.login = this.login.bind(this)\n        this.renderRedirect = this.renderRedirect.bind(this)\n    }\n\n    renderRedirect = () => {\n        if (localStorage.getItem('login') == 'true') {\n            return <Redirect to='/admin' />\n        } else {\n            console.log('test');\n        }\n\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    login(e) {\n        console.log('local login: ', localStorage.getItem('login'));\n        const action = { type: \"LOGIN\", value: e }\n        this.props.dispatch(action)\n    }\n\n\n    render() {\n        return (\n            <div id=\"totalregister\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\"></div>\n                        <div className=\"col-md-6\">\n                            <div className=\"login-wrap\">\n                                <div className=\"login-html\">\n                                    <div className=\"login-form\">\n                                        <div className=\"form-group\">\n                                            <center>\n                                                <img id=\"image-login\" src=\"../images/logo.png\" alt=\"logoimage\" />\n                                            </center><br />\n                                            {this.renderRedirect()}\n                                            <form onSubmit={e => {\n                                                e.preventDefault()\n                                                this.login({\n                                                    nom: this.state.nom,\n                                                    password: this.state.password,\n                                                })\n\n                                                this.setState({ nom: '', password: '' })\n                                            }}>\n                                                <div className=\"form-group\">\n                                                    <MDBInput label=\"Nom\" size=\"lg\" icon=\"user\" id=\"user\" type=\"text\" className=\"input\" name=\"nom\" onChange={this.handleChange} value={this.state.value} />\n                                                    <MDBInput label=\"Password\" size=\"lg\" icon=\"lock\" id=\"pass\" type=\"passWord\" className=\"input\" name=\"password\" onChange={this.handleChange} value={this.state.value} />\n                                                    <Fragment>\n                                                        <MDBBtn rounded gradient=\"purple\" className=\"button\" id=\"boutton\">Se connecter</MDBBtn>\n                                                    </Fragment>\n                                                </div>\n                                            </form>\n                                            <center><a href=\"/register\">S'inscrire</a></center>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        client: state\n    }\n}\nexport default connect(mapStateToProps)(Login)"]},"metadata":{},"sourceType":"module"}