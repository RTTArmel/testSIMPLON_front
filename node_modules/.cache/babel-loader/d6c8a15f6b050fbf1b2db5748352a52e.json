{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/Pr\\xE9-testSIMPLON/pre-test_front/src/components/article.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport './article.css';\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\n\nclass Article extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.state = {\n      titre: '',\n      description: '',\n      prix: '',\n      comment: [],\n      modal: false\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    var tab = [];\n    console.log('props: ', this.props);\n    axios.get(\"http://localhost:8080/profil\").then(res => {\n      console.log('res comment: ', res.data);\n\n      for (let i = 0; i < res.data.length; i++) {\n        if (localStorage.getItem('id') == res.data[i].utilisateur) {\n          tab.push(res.data[i]);\n        }\n      }\n\n      this.setState({\n        comment: tab\n      });\n      console.log('comment: ', this.state.comment);\n    });\n  }\n\n  render() {\n    return (// // AJOUT\n      React.createElement(\"center\", {\n        onSubmit: event => {\n          event.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Nom du produit\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Prix\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.comment.length > 0 ? this.state.comment.sort((a, b) => {\n        return b._id - a._id;\n      }).map((article, _id) => React.createElement(\"tr\", {\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        id: \"titre\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        class: \"card-img-top img-thumbnail\",\n        src: \"http://localhost:8080/profil/\" + article.image,\n        alt: article.titre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), article.titre), React.createElement(\"td\", {\n        id: \"description\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, article.description), React.createElement(\"td\", {\n        id: \"prix\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, article.prix), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => {\n          confirmAlert({\n            customUI: ({\n              onClose\n            }) => {\n              return React.createElement(\"center\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 75\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"custom-ui\",\n                id: \"popup\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 76\n                },\n                __self: this\n              }, React.createElement(\"h6\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77\n                },\n                __self: this\n              }, \"Suppression Produit\"), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 77\n                },\n                __self: this\n              }), React.createElement(\"h6\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78\n                },\n                __self: this\n              }, article.titre), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78\n                },\n                __self: this\n              }), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: () => {\n                  // props.deletearticle(article.id); //Appel de la fonction deletearticle App.js\n                  onClose();\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 79\n                },\n                __self: this\n              }, \"OUI\"), React.createElement(\"a\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 86\n                },\n                __self: this\n              }, \"\\xA0\\xA0\"), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: onClose,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 87\n                },\n                __self: this\n              }, \"NON\")));\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => {\n          confirmAlert({\n            customUI: ({\n              onClose\n            }) => {\n              return React.createElement(\"form\", {\n                id: \"ID_FORMULAIRE\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 103\n                },\n                __self: this\n              }, React.createElement(\"center\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 104\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"custom-ui\",\n                id: \"popup\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 105\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                name: \"inputStoreID\",\n                placeholder: article.prix,\n                id: \"entree\",\n                className: \"modif\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 106\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 106\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                id: \"e\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 107\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 107\n                },\n                __self: this\n              }), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: e => {\n                  article.prix = document.forms['ID_FORMULAIRE'].elements['inputStoreID'].value; //Affectation du contenu de l'input dans article.prix \n\n                  if (isNaN(article.prix) || article.prix == \"\") {\n                    var valid = \"Entrer un Nombre\";\n                    e.preventDefault();\n                    document.getElementById('e').innerHTML = valid; //Affichage de la variable valid dans le paragraphe e\n                  } else {\n                    valid = \"\";\n                    document.getElementById('e').innerHTML = valid; // props.updatearticle(article.prix, article) //Appel de la fonction updatearticle App.js\n                    // props.editRow(article.id); //Appel de la fonction editRow App.js\n\n                    onClose();\n                  }\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 109\n                },\n                __self: this\n              }, \"OK\"), React.createElement(\"a\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 125\n                },\n                __self: this\n              }, \"\\xA0\\xA0\"), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: onClose,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127\n                },\n                __self: this\n              }, \"Annuler\"))));\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"center\", {\n        onSubmit: event => {\n          event.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"tab\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Nom du produit\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Prix\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.state.comment.length > 0 ? this.state.comment.sort((a, b) => {\n        return b._id - a._id;\n      }).map((article, _id) => React.createElement(\"tr\", {\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        id: \"titre\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, article.titre), React.createElement(\"td\", {\n        id: \"description\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, article.description), React.createElement(\"td\", {\n        id: \"prix\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, article.prix), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => {\n          confirmAlert({\n            customUI: ({\n              onClose\n            }) => {\n              return React.createElement(\"center\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 162\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"custom-ui\",\n                id: \"popup\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 163\n                },\n                __self: this\n              }, React.createElement(\"h6\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 164\n                },\n                __self: this\n              }, \"Suppression Produit\"), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 164\n                },\n                __self: this\n              }), React.createElement(\"h6\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 165\n                },\n                __self: this\n              }, article.titre), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 165\n                },\n                __self: this\n              }), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: () => {\n                  // props.deletearticle(article.id); //Appel de la fonction deletearticle App.js\n                  onClose();\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 166\n                },\n                __self: this\n              }, \"OUI\"), React.createElement(\"a\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 173\n                },\n                __self: this\n              }, \"\\xA0\\xA0\"), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: onClose,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 174\n                },\n                __self: this\n              }, \"NON\")));\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => {\n          confirmAlert({\n            customUI: ({\n              onClose\n            }) => {\n              return React.createElement(\"form\", {\n                id: \"ID_FORMULAIRE\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 190\n                },\n                __self: this\n              }, React.createElement(\"center\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 191\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"custom-ui\",\n                id: \"popup\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 192\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                name: \"inputStoreID\",\n                placeholder: article.prix,\n                id: \"entree\",\n                className: \"modif\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 193\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 193\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                id: \"e\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 194\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 194\n                },\n                __self: this\n              }), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: e => {\n                  article.prix = document.forms['ID_FORMULAIRE'].elements['inputStoreID'].value; //Affectation du contenu de l'input dans article.prix \n\n                  if (isNaN(article.prix) || article.prix == \"\") {\n                    var valid = \"Entrer un Nombre\";\n                    e.preventDefault();\n                    document.getElementById('e').innerHTML = valid; //Affichage de la variable valid dans le paragraphe e\n                  } else {\n                    valid = \"\";\n                    document.getElementById('e').innerHTML = valid; // props.updatearticle(article.prix, article) //Appel de la fonction updatearticle App.js\n                    // props.editRow(article.id); //Appel de la fonction editRow App.js\n\n                    onClose();\n                  }\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 196\n                },\n                __self: this\n              }, \"OK\"), React.createElement(\"a\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 212\n                },\n                __self: this\n              }, \"\\xA0\\xA0\"), React.createElement(\"button\", {\n                className: \"btn btn-dark\",\n                onClick: onClose,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 214\n                },\n                __self: this\n              }, \"Annuler\"))));\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Edit\")))) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })))))))) : React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        colSpan: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }))))) // <div className='container'>\n      //     <div className='row'>\n      //         {this.state.comment.length > 0 ? (this.state.comment.sort((a, b) => { return b._id - a._id }).map((article, _id) => {\n      //             console.log('article-image: ', article._id);\n      //             return (\n      //                 <div className='col-md-5 carte' key={_id}>\n      //                     <div className=\"card\">\n      //                         <button onClick={this.toggle}><img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + article.image} alt={article.titre} /></button>\n      //                         <div class=\"card-body\">\n      //                             <center>\n      //                                 <h5 class=\"card-title\">{article.titre}</h5>\n      //                                 <p class=\"test\">{article.prix}</p>\n      //                             </center>\n      //                         </div>\n      //                         <MDBContainer  key={_id}>\n      //                             <MDBModal isOpen={this.state.modal}>\n      //                                 <MDBModalHeader>{this.props.titre}</MDBModalHeader>\n      //                                 <MDBModalBody>\n      //                                     <center>\n      //                                         <img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + article.image} alt={article.titre} />\n      //                                         <p>{article.description}</p>\n      //                                         <p>{article.prix}</p>\n      //                                     </center>\n      //                                 </MDBModalBody>\n      //                                 <MDBModalFooter>\n      //                                     <MDBBtn color=\"secondary\" onClick={() => { this.toggle() }}>Close</MDBBtn>\n      //                                 </MDBModalFooter>\n      //                             </MDBModal>\n      //                         </MDBContainer>\n      //                     </div>\n      //                     <br />\n      //                 </div>\n      //             )\n      //         }\n      //         )) : ''}\n      //     </div>\n      // </div>\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listeArticle: state\n  };\n};\n\nexport default connect(mapStateToProps)(Article);","map":{"version":3,"sources":["/home/dev/Bureau/Pré-testSIMPLON/pre-test_front/src/components/article.jsx"],"names":["React","Component","connect","axios","confirmAlert","MDBContainer","MDBInput","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","Article","constructor","props","toggle","setState","modal","state","titre","description","prix","comment","handleChange","e","target","name","value","componentDidMount","tab","console","log","get","then","res","data","i","length","localStorage","getItem","utilisateur","push","render","event","preventDefault","sort","a","b","_id","map","article","image","customUI","onClose","document","forms","elements","isNaN","valid","getElementById","innerHTML","mapStateToProps","listeArticle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport './article.css'\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\n\nclass Article extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            titre: '', \n            description: '',\n            prix: '',\n            comment: [],\n            modal: false,\n        };\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal,\n        });\n    }\n\n    componentDidMount() {\n        var tab = []\n        console.log('props: ', this.props)\n        axios.get(\"http://localhost:8080/profil\").then(res => {\n            console.log('res comment: ', res.data)\n            for (let i = 0; i < res.data.length; i++) {\n                if (localStorage.getItem('id') == res.data[i].utilisateur) {\n                    tab.push(res.data[i])\n                }\n            }\n            this.setState({ comment: tab })\n            console.log('comment: ', this.state.comment)\n        })\n    }\n\n    render() {\n        return (\n            // // AJOUT\n            <center onSubmit={event => {\n                event.preventDefault()\n            }}>\n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr className=\"tab\">\n                            <th>Nom du produit</th>\n                            <th>Description</th>\n                            <th>Prix</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {(this.state.comment.length > 0) ? (\n                            this.state.comment.sort((a, b) => { return b._id - a._id }).map((article, _id) => (\n                                <tr key={_id}>\n                                    <td id=\"titre\" onChange={this.handleChange}><img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + article.image} alt={article.titre} />{article.titre}</td>\n                                    <td id=\"description\" onChange={this.handleChange}>{article.description}</td>\n                                    <td id=\"prix\" onChange={this.handleChange}>{article.prix}</td>\n                                    <td>\n                                        {/* SUPPRESSION */}\n                                        <button className=\"btn btn-danger\"\n                                            onClick={() => {\n                                                confirmAlert({\n                                                    customUI: ({ onClose }) => {\n                                                        return (\n                                                            <center>\n                                                                <div className=\"custom-ui\" id=\"popup\">\n                                                                    <h6>Suppression Produit</h6><br />\n                                                                    <h6>{article.titre}</h6><br />\n                                                                    <button className=\"btn btn-dark\"\n                                                                        onClick={() => {\n                                                                            // props.deletearticle(article.id); //Appel de la fonction deletearticle App.js\n                                                                            onClose();\n                                                                        }}\n                                                                    >\n                                                                        OUI\n                                                            </button><a>&nbsp;&nbsp;</a>\n                                                                    <button className=\"btn btn-dark\" onClick={onClose}>NON</button>\n                                                                </div>\n                                                            </center>\n                                                        );\n                                                    }\n                                                })\n                                            }\n                                            }\n                                        >X</button>\n                                        <a>&nbsp;</a>\n                                        {/* MODIFICATION */}\n                                        <button className=\"btn btn-success\"\n                                            onClick={() => {\n                                                confirmAlert({\n                                                    customUI: ({ onClose }) => {\n                                                        return (\n                                                            <form id='ID_FORMULAIRE'>\n                                                                <center>\n                                                                    <div className=\"custom-ui\" id=\"popup\">\n                                                                        <input name='inputStoreID' placeholder={article.prix} id=\"entree\" className=\"modif\"></input><br />\n                                                                        <p id=\"e\"></p><br />\n\n                                                                        <button className=\"btn btn-dark\"\n                                                                            onClick={(e) => {\n                                                                                article.prix = document.forms['ID_FORMULAIRE'].elements['inputStoreID'].value //Affectation du contenu de l'input dans article.prix \n                                                                                if (isNaN(article.prix) || article.prix == \"\") {\n                                                                                    var valid = \"Entrer un Nombre\"\n                                                                                    e.preventDefault()\n                                                                                    document.getElementById('e').innerHTML = valid; //Affichage de la variable valid dans le paragraphe e\n                                                                                } else {\n                                                                                    valid = \"\";\n                                                                                    document.getElementById('e').innerHTML = valid;\n                                                                                    // props.updatearticle(article.prix, article) //Appel de la fonction updatearticle App.js\n                                                                                    // props.editRow(article.id); //Appel de la fonction editRow App.js\n                                                                                    onClose();\n                                                                                }\n                                                                            }\n                                                                            }\n                                                                        >OK</button><a>&nbsp;&nbsp;</a>\n\n                                                                        <button className=\"btn btn-dark\" onClick={onClose}>Annuler</button>\n                                                                    </div>\n                                                                </center>\n                                                            </form>\n                                                        );\n                                                    }\n                                                })\n                                            }\n                                            }\n                                        >Edit</button><center onSubmit={event => {\n                                            event.preventDefault()\n                                        }}>\n                                            <table className=\"table table-bordered\">\n                                                <thead>\n                                                    <tr className=\"tab\">\n                                                        <th>Nom du produit</th>\n                                                        <th>Description</th>\n                                                        <th>Prix</th>\n                                                        <th>Actions</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {(this.state.comment.length > 0) ? (\n                                                        this.state.comment.sort((a, b) => { return b._id - a._id }).map((article, _id) => (\n                                                            <tr key={_id}>\n                                                                <td id=\"titre\" onChange={this.handleChange}>{article.titre}</td>\n                                                                <td id=\"description\" onChange={this.handleChange}>{article.description}</td>\n                                                                <td id=\"prix\" onChange={this.handleChange}>{article.prix}</td>\n                                                                <td>\n                                                                    {/* SUPPRESSION */}\n                                                                    <button className=\"btn btn-danger\"\n                                                                        onClick={() => {\n                                                                            confirmAlert({\n                                                                                customUI: ({ onClose }) => {\n                                                                                    return (\n                                                                                        <center>\n                                                                                            <div className=\"custom-ui\" id=\"popup\">\n                                                                                                <h6>Suppression Produit</h6><br />\n                                                                                                <h6>{article.titre}</h6><br />\n                                                                                                <button className=\"btn btn-dark\"\n                                                                                                    onClick={() => {\n                                                                                                        // props.deletearticle(article.id); //Appel de la fonction deletearticle App.js\n                                                                                                        onClose();\n                                                                                                    }}\n                                                                                                >\n                                                                                                    OUI\n                                                                                        </button><a>&nbsp;&nbsp;</a>\n                                                                                                <button className=\"btn btn-dark\" onClick={onClose}>NON</button>\n                                                                                            </div>\n                                                                                        </center>\n                                                                                    );\n                                                                                }\n                                                                            })\n                                                                        }\n                                                                        }\n                                                                    >X</button>\n                                                                    <a>&nbsp;</a>\n                                                                    {/* MODIFICATION */}\n                                                                    <button className=\"btn btn-success\"\n                                                                        onClick={() => {\n                                                                            confirmAlert({\n                                                                                customUI: ({ onClose }) => {\n                                                                                    return (\n                                                                                        <form id='ID_FORMULAIRE'>\n                                                                                            <center>\n                                                                                                <div className=\"custom-ui\" id=\"popup\">\n                                                                                                    <input name='inputStoreID' placeholder={article.prix} id=\"entree\" className=\"modif\"></input><br />\n                                                                                                    <p id=\"e\"></p><br />\n                            \n                                                                                                    <button className=\"btn btn-dark\"\n                                                                                                        onClick={(e) => {\n                                                                                                            article.prix = document.forms['ID_FORMULAIRE'].elements['inputStoreID'].value //Affectation du contenu de l'input dans article.prix \n                                                                                                            if (isNaN(article.prix) || article.prix == \"\") {\n                                                                                                                var valid = \"Entrer un Nombre\"\n                                                                                                                e.preventDefault()\n                                                                                                                document.getElementById('e').innerHTML = valid; //Affichage de la variable valid dans le paragraphe e\n                                                                                                            } else {\n                                                                                                                valid = \"\";\n                                                                                                                document.getElementById('e').innerHTML = valid;\n                                                                                                                // props.updatearticle(article.prix, article) //Appel de la fonction updatearticle App.js\n                                                                                                                // props.editRow(article.id); //Appel de la fonction editRow App.js\n                                                                                                                onClose();\n                                                                                                            }\n                                                                                                        }\n                                                                                                        }\n                                                                                                    >OK</button><a>&nbsp;&nbsp;</a>\n                            \n                                                                                                    <button className=\"btn btn-dark\" onClick={onClose}>Annuler</button>\n                                                                                                </div>\n                                                                                            </center>\n                                                                                        </form>\n                                                                                    );\n                                                                                }\n                                                                            })\n                                                                        }\n                                                                        }\n                                                                    >Edit</button>\n                                                                </td>\n                                                            </tr>\n                                                        ))\n                                                    ) : (\n                                                            <tr>\n                                                                <td colSpan={4}></td>\n                                                            </tr>\n                                                        )}\n                                                </tbody>\n                                            </table>\n                                        </center>\n                                    </td>\n                                </tr>\n                            ))\n                        ) : (\n                                <tr>\n                                    <td colSpan={4}></td>\n                                </tr>\n                            )}\n                    </tbody>\n                </table>\n            </center>\n\n\n\n\n\n            // <div className='container'>\n            //     <div className='row'>\n            //         {this.state.comment.length > 0 ? (this.state.comment.sort((a, b) => { return b._id - a._id }).map((article, _id) => {\n            //             console.log('article-image: ', article._id);\n            //             return (\n            //                 <div className='col-md-5 carte' key={_id}>\n            //                     <div className=\"card\">\n            //                         <button onClick={this.toggle}><img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + article.image} alt={article.titre} /></button>\n            //                         <div class=\"card-body\">\n            //                             <center>\n            //                                 <h5 class=\"card-title\">{article.titre}</h5>\n            //                                 <p class=\"test\">{article.prix}</p>\n            //                             </center>\n            //                         </div>\n            //                         <MDBContainer  key={_id}>\n            //                             <MDBModal isOpen={this.state.modal}>\n            //                                 <MDBModalHeader>{this.props.titre}</MDBModalHeader>\n            //                                 <MDBModalBody>\n            //                                     <center>\n            //                                         <img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + article.image} alt={article.titre} />\n            //                                         <p>{article.description}</p>\n            //                                         <p>{article.prix}</p>\n            //                                     </center>\n            //                                 </MDBModalBody>\n            //                                 <MDBModalFooter>\n            //                                     <MDBBtn color=\"secondary\" onClick={() => { this.toggle() }}>Close</MDBBtn>\n            //                                 </MDBModalFooter>\n            //                             </MDBModal>\n            //                         </MDBContainer>\n            //                     </div>\n            //                     <br />\n            //                 </div>\n\n            //             )\n            //         }\n            //         )) : ''}\n            //     </div>\n            // </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        listeArticle: state\n    }\n}\n\nexport default connect(mapStateToProps)(Article)"]},"metadata":{},"sourceType":"module"}