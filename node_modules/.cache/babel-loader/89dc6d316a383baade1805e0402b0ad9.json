{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/Pr\\xE9-testSIMPLON/pre-test_front/src/components/article.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport './article.css';\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\n\nclass Article extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.state = {\n      titre: '',\n      description: '',\n      prix: '',\n      comment: [],\n      modal: false\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    var tab = [];\n    console.log('props: ', this.props);\n    axios.get(\"http://localhost:8080/profil\").then(res => {\n      console.log('res comment: ', res.data);\n\n      for (let i = 0; i < res.data.length; i++) {\n        if (localStorage.getItem('id') == res.data[i].utilisateur) {\n          tab.push(res.data[i]);\n        }\n      }\n\n      this.setState({\n        comment: tab\n      });\n      console.log('comment: ', this.state.comment);\n    });\n  }\n\n  render() {\n    return (// // AJOUT\n      // <center onSubmit={event => {\n      //     event.preventDefault()\n      // }}>\n      //     <table className=\"table table-bordered\">\n      //         <thead>\n      //             <tr className=\"tab\">\n      //                 <th>Nom du produit</th>\n      //                 <th>Description</th>\n      //                 <th>Prix</th>\n      //                 <th>Actions</th>\n      //             </tr>\n      //         </thead>\n      //         <tbody>\n      //             {(this.state.comment.length > 0) ? (\n      //                 this.state.comment.sort((a, b) => { return b._id - a._id }).map((user, _id) => (\n      //                     <tr key={_id}>\n      //                         <td id=\"titre\" onChange={this.handleChange}><img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + user.image} alt={user.titre} /><br />{user.titre}</td>\n      //                         <td id=\"description\" onChange={this.handleChange}>{user.description}</td>\n      //                         <td id=\"prix\" onChange={this.handleChange}>{user.prix}</td>\n      //                         <td>\n      //                             {/* SUPPRESSION */}\n      //                             <button className=\"btn btn-danger\"\n      //                                 onClick={() => {\n      //                                     confirmAlert({\n      //                                         customUI: ({ onClose }) => {\n      //                                             return (\n      //                                                 <center>\n      //                                                     <div className=\"custom-ui\" id=\"popup\">\n      //                                                         <table>\n      //                                                             <td>\n      //                                                                 <img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + user.image} alt={user.titre} /><br />\n      //                                                             </td>\n      //                                                             <td>\n      //                                                                 <h6>Suppression du Produit: </h6><br />\n      //                                                                 <h6>{user.titre}</h6><br />\n      //                                                             </td>\n      //                                                         </table>\n      //                                                         <button className=\"btn btn-dark\"\n      //                                                             onClick={() => {\n      //                                                                 // props.deleteUser(user.id); //Appel de la fonction deleteUser App.js\n      //                                                                 onClose();\n      //                                                             }}\n      //                                                         >\n      //                                                             OUI\n      //                                                 </button><a>&nbsp;&nbsp;</a>\n      //                                                         <button className=\"btn btn-dark\" onClick={onClose}>NON</button>\n      //                                                     </div>\n      //                                                 </center>\n      //                                             );\n      //                                         }\n      //                                     })\n      //                                 }\n      //                                 }\n      //                             >X</button>\n      //                             <a>&nbsp;</a>\n      //                             {/* MODIFICATION */}\n      //                             <button className=\"btn btn-success\"\n      //                                 onClick={() => {\n      //                                     confirmAlert({\n      //                                         customUI: ({ onClose }) => {\n      //                                             return (\n      //                                                 <form id='ID_FORMULAIRE'>\n      //                                                     <center>\n      //                                                         <div className=\"custom-ui\" id=\"popup\">\n      //                                                             <input name='inputStoreID' placeholder={user.prix} id=\"entree\" className=\"modif\"></input><br />\n      //                                                             <p id=\"e\"></p><br />\n      //                                                             <button className=\"btn btn-dark\"\n      //                                                                 onClick={(e) => {\n      //                                                                     user.prix = document.forms['ID_FORMULAIRE'].elements['inputStoreID'].value //Affectation du contenu de l'input dans user.prix \n      //                                                                     if (isNaN(user.prix) || user.prix == \"\") {\n      //                                                                         var valid = \"Entrer un Nombre\"\n      //                                                                         e.preventDefault()\n      //                                                                         document.getElementById('e').innerHTML = valid; //Affichage de la variable valid dans le paragraphe e\n      //                                                                     } else {\n      //                                                                         valid = \"\";\n      //                                                                         document.getElementById('e').innerHTML = valid;\n      //                                                                         // props.updateUser(user.prix, user) //Appel de la fonction updateUser App.js\n      //                                                                         // props.editRow(user.id); //Appel de la fonction editRow App.js\n      //                                                                         onClose();\n      //                                                                     }\n      //                                                                 }\n      //                                                                 }\n      //                                                             >OK</button><a>&nbsp;&nbsp;</a>\n      //                                                             <button className=\"btn btn-dark\" onClick={onClose}>Annuler</button>\n      //                                                         </div>\n      //                                                     </center>\n      //                                                 </form>\n      //                                             );\n      //                                         }\n      //                                     })\n      //                                 }\n      //                                 }\n      //                             >Edit</button>\n      //                         </td>\n      //                     </tr>\n      //                 ))\n      //             ) : (\n      //                     <tr>\n      //                         <td colSpan={4}></td>\n      //                     </tr>\n      //                 )}\n      //         </tbody>\n      //     </table>\n      // </center>\n      React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.state.comment.length > 0 ? this.state.comment.sort((a, b) => {\n        return b._id - a._id;\n      }).map((article, _id) => React.createElement(\"div\", {\n        className: \"col-md-5 carte\",\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        class: \"card-img-top img-thumbnail\",\n        src: \"http://localhost:8080/profil/\" + article.image,\n        alt: article.titre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, article.titre), React.createElement(\"p\", {\n        class: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, article.prix))), React.createElement(MDBContainer, {\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(MDBModal, {\n        isOpen: this.state.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(MDBModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, this.props.titre), React.createElement(MDBModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        class: \"card-img-top img-thumbnail\",\n        src: \"http://localhost:8080/profil/\" + article.image,\n        alt: article.titre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, article.description), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, article.prix))), React.createElement(MDBModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        color: \"secondary\",\n        onClick: () => {\n          this.toggle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Close\"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }))) : ''))\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listeArticle: state\n  };\n};\n\nexport default connect(mapStateToProps)(Article);","map":{"version":3,"sources":["/home/dev/Bureau/Pré-testSIMPLON/pre-test_front/src/components/article.jsx"],"names":["React","Component","connect","axios","confirmAlert","MDBContainer","MDBInput","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","Article","constructor","props","toggle","setState","modal","state","titre","description","prix","comment","handleChange","e","target","name","value","componentDidMount","tab","console","log","get","then","res","data","i","length","localStorage","getItem","utilisateur","push","render","sort","a","b","_id","map","article","image","mapStateToProps","listeArticle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport './article.css'\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\n\nclass Article extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            titre: '',\n            description: '',\n            prix: '',\n            comment: [],\n            modal: false,\n        };\n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal,\n        });\n    }\n\n    componentDidMount() {\n        var tab = []\n        console.log('props: ', this.props)\n        axios.get(\"http://localhost:8080/profil\").then(res => {\n            console.log('res comment: ', res.data)\n            for (let i = 0; i < res.data.length; i++) {\n                if (localStorage.getItem('id') == res.data[i].utilisateur) {\n                    tab.push(res.data[i])\n                }\n            }\n            this.setState({ comment: tab })\n            console.log('comment: ', this.state.comment)\n        })\n    }\n\n    render() {\n        return (\n            // // AJOUT\n            // <center onSubmit={event => {\n            //     event.preventDefault()\n            // }}>\n            //     <table className=\"table table-bordered\">\n            //         <thead>\n            //             <tr className=\"tab\">\n            //                 <th>Nom du produit</th>\n            //                 <th>Description</th>\n            //                 <th>Prix</th>\n            //                 <th>Actions</th>\n            //             </tr>\n            //         </thead>\n            //         <tbody>\n            //             {(this.state.comment.length > 0) ? (\n            //                 this.state.comment.sort((a, b) => { return b._id - a._id }).map((user, _id) => (\n            //                     <tr key={_id}>\n            //                         <td id=\"titre\" onChange={this.handleChange}><img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + user.image} alt={user.titre} /><br />{user.titre}</td>\n            //                         <td id=\"description\" onChange={this.handleChange}>{user.description}</td>\n            //                         <td id=\"prix\" onChange={this.handleChange}>{user.prix}</td>\n            //                         <td>\n            //                             {/* SUPPRESSION */}\n            //                             <button className=\"btn btn-danger\"\n            //                                 onClick={() => {\n            //                                     confirmAlert({\n            //                                         customUI: ({ onClose }) => {\n            //                                             return (\n            //                                                 <center>\n            //                                                     <div className=\"custom-ui\" id=\"popup\">\n            //                                                         <table>\n            //                                                             <td>\n            //                                                                 <img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + user.image} alt={user.titre} /><br />\n            //                                                             </td>\n            //                                                             <td>\n            //                                                                 <h6>Suppression du Produit: </h6><br />\n            //                                                                 <h6>{user.titre}</h6><br />\n            //                                                             </td>\n            //                                                         </table>\n            //                                                         <button className=\"btn btn-dark\"\n            //                                                             onClick={() => {\n            //                                                                 // props.deleteUser(user.id); //Appel de la fonction deleteUser App.js\n            //                                                                 onClose();\n            //                                                             }}\n            //                                                         >\n            //                                                             OUI\n            //                                                 </button><a>&nbsp;&nbsp;</a>\n            //                                                         <button className=\"btn btn-dark\" onClick={onClose}>NON</button>\n            //                                                     </div>\n            //                                                 </center>\n            //                                             );\n            //                                         }\n            //                                     })\n            //                                 }\n            //                                 }\n            //                             >X</button>\n            //                             <a>&nbsp;</a>\n            //                             {/* MODIFICATION */}\n            //                             <button className=\"btn btn-success\"\n            //                                 onClick={() => {\n            //                                     confirmAlert({\n            //                                         customUI: ({ onClose }) => {\n            //                                             return (\n            //                                                 <form id='ID_FORMULAIRE'>\n            //                                                     <center>\n            //                                                         <div className=\"custom-ui\" id=\"popup\">\n            //                                                             <input name='inputStoreID' placeholder={user.prix} id=\"entree\" className=\"modif\"></input><br />\n            //                                                             <p id=\"e\"></p><br />\n\n            //                                                             <button className=\"btn btn-dark\"\n            //                                                                 onClick={(e) => {\n            //                                                                     user.prix = document.forms['ID_FORMULAIRE'].elements['inputStoreID'].value //Affectation du contenu de l'input dans user.prix \n            //                                                                     if (isNaN(user.prix) || user.prix == \"\") {\n            //                                                                         var valid = \"Entrer un Nombre\"\n            //                                                                         e.preventDefault()\n            //                                                                         document.getElementById('e').innerHTML = valid; //Affichage de la variable valid dans le paragraphe e\n            //                                                                     } else {\n            //                                                                         valid = \"\";\n            //                                                                         document.getElementById('e').innerHTML = valid;\n            //                                                                         // props.updateUser(user.prix, user) //Appel de la fonction updateUser App.js\n            //                                                                         // props.editRow(user.id); //Appel de la fonction editRow App.js\n            //                                                                         onClose();\n            //                                                                     }\n            //                                                                 }\n            //                                                                 }\n            //                                                             >OK</button><a>&nbsp;&nbsp;</a>\n\n            //                                                             <button className=\"btn btn-dark\" onClick={onClose}>Annuler</button>\n            //                                                         </div>\n            //                                                     </center>\n            //                                                 </form>\n            //                                             );\n            //                                         }\n            //                                     })\n            //                                 }\n            //                                 }\n            //                             >Edit</button>\n            //                         </td>\n            //                     </tr>\n            //                 ))\n            //             ) : (\n            //                     <tr>\n            //                         <td colSpan={4}></td>\n            //                     </tr>\n            //                 )}\n            //         </tbody>\n            //     </table>\n            // </center>\n\n\n\n\n\n            <div className='container'>\n                <div className='row'>\n                    {this.state.comment.length > 0 ? (this.state.comment.sort((a, b) => { return b._id - a._id }).map((article, _id) => (\n                            <div className='col-md-5 carte' key={_id}>\n                                <div className=\"card\">\n                                    <button onClick={this.toggle}><img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + article.image} alt={article.titre} /></button>\n                                    <div class=\"card-body\">\n                                        <center>\n                                            <h5 class=\"card-title\">{article.titre}</h5>\n                                            <p class=\"test\">{article.prix}</p>\n                                        </center>\n                                    </div>\n                                    <MDBContainer  key={_id}>\n                                        <MDBModal isOpen={this.state.modal}>\n                                            <MDBModalHeader>{this.props.titre}</MDBModalHeader>\n                                            <MDBModalBody>\n                                                <center>\n                                                    <img class=\"card-img-top img-thumbnail\" src={\"http://localhost:8080/profil/\" + article.image} alt={article.titre} />\n                                                    <p>{article.description}</p>\n                                                    <p>{article.prix}</p>\n                                                </center>\n                                            </MDBModalBody>\n                                            <MDBModalFooter>\n                                                <MDBBtn color=\"secondary\" onClick={() => { this.toggle() }}>Close</MDBBtn>\n                                            </MDBModalFooter>\n                                        </MDBModal>\n                                    </MDBContainer>\n                                </div>\n                                <br />\n                            </div>\n                    )\n                    )) : ''}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        listeArticle: state\n    }\n}\n\nexport default connect(mapStateToProps)(Article)"]},"metadata":{},"sourceType":"module"}