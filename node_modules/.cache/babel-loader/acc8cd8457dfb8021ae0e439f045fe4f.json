{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/EXAMEN/testSIMPLON_front/src/components/postupload.js\";\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport { Redirect } from 'react-router-dom';\nimport { MDBSwitch } from \"mdbreact\";\n\nclass PostFrontToBack extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRedirect = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n      return React.createElement(Redirect, {\n        to: \"/admin/article\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    };\n\n    this.toggle = () => {\n      this.handleUploadImage();\n      this.setState({\n        modal: !this.state.modal,\n        titre: '',\n        description: '',\n        utilisateur: '',\n        prix: '',\n        image: '',\n        date: '',\n        debut: '',\n        duree: '',\n        reserve: '',\n        disponible: '',\n        active: false\n      });\n    };\n\n    this.handleSwitchChange = nr => () => {\n      let switchNumber = \"switch\".concat(nr);\n      this.setState({\n        [switchNumber]: !this.state[switchNumber]\n      });\n    };\n\n    this.state = {\n      titre: '',\n      description: '',\n      utilisateur: '',\n      prix: '',\n      image: '',\n      date: '',\n      debut: '',\n      duree: '',\n      reserve: '',\n      disponible: '',\n      switch1: true,\n      active: false,\n      modal: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n    this.renderRedirect = this.renderRedirect.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleUploadImage(ev) {\n    const data = new FormData();\n    data.append('image', this.uploadInput.files[0]);\n    data.append('titre', this.state.titre);\n    data.append('description', this.state.description);\n    data.append('prix', this.state.prix);\n    data.append('utilisateur', localStorage.getItem('id'));\n    fetch('https://tsiorytahback.herokuapp.com/profil', {\n      // fetch('http://localhost:8080/profil', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        this.setState({\n          // image: `http://localhost:8080/profil/${body.image}`,\n          // image1: `http://localhost:8080/profil/${body.image1}`,\n          // image2: `http://localhost:8080/profil/${body.image2}`\n          image: \"https://tsiorytahback.herokuapp.com/profil/\".concat(body.image)\n        });\n        console.log('ity ilay body.fil', body.image);\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container fluid w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      class: \"card\",\n      style: {\n        width: \"500px\",\n        marginLeft: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"card-header info-color white-text text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"NOUVEAU PRODUIT\")), React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      class: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(MDBSwitch, {\n      checked: this.state.switch1,\n      onChange: this.handleSwitchChange(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Nom du Produit\",\n      id: \"un\",\n      type: \"text\",\n      className: \"input black-text\",\n      name: \"titre\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Descriptions\",\n      size: \"lg\",\n      id: \"ml\",\n      type: \"textarea\",\n      rows: \"3\",\n      className: \"input black-text\",\n      name: \"description\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Prix\",\n      size: \"lg\",\n      id: \"pw\",\n      type: \"number\",\n      className: \"input black-text\",\n      name: \"prix\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Date\",\n      size: \"lg\",\n      id: \"ml\",\n      type: \"date\",\n      className: \"input black-text\",\n      name: \"date\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Heure de d\\xE9but\",\n      size: \"lg\",\n      id: \"ml\",\n      type: \"date\",\n      className: \"input black-text\",\n      name: \"debut\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Dur\\xE9e\",\n      size: \"lg\",\n      id: \"ml\",\n      type: \"number\",\n      className: \"input black-text\",\n      name: \"duree\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Nombre de places\",\n      size: \"lg\",\n      id: \"ml\",\n      type: \"number\",\n      className: \"input black-text\",\n      name: \"disponible\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      ref: ref => {\n        this.uploadInput = ref;\n      },\n      type: \"file\",\n      name: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      ref: ref1 => {\n        this.uploadInput1 = ref1;\n      },\n      type: \"file\",\n      name: \"image1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      ref: ref2 => {\n        this.uploadInput2 = ref2;\n      },\n      type: \"file\",\n      name: \"image2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Ajouter\"), React.createElement(MDBModal, {\n      isOpen: this.state.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Enregistrement...\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Ajout du Produit avec succ\\xE9s\")), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: () => {\n        this.renderRedirect();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Close\"))))));\n  }\n\n}\n\nexport default PostFrontToBack;\n/*\nstate = {\n    switch1: true,\n    switch2: false\n  }\n\n  handleSwitchChange = nr => () => {\n    let switchNumber = `switch${nr}`;\n    this.setState({\n      [switchNumber]: !this.state[switchNumber]\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <MDBSwitch checked={this.state.switch1} onChange={this.handleSwitchChange(1)} />\n        <MDBSwitch checked={this.state.switch2} onChange={this.handleSwitchChange(2)} />\n      </>\n      );\n    }\n  } */","map":{"version":3,"sources":["/home/dev/Bureau/EXAMEN/testSIMPLON_front/src/components/postupload.js"],"names":["React","Component","MDBContainer","MDBInput","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","Redirect","MDBSwitch","PostFrontToBack","constructor","props","renderRedirect","setState","modal","state","toggle","handleUploadImage","titre","description","utilisateur","prix","image","date","debut","duree","reserve","disponible","active","handleSwitchChange","nr","switchNumber","switch1","handleChange","bind","event","target","name","value","ev","data","FormData","append","uploadInput","files","localStorage","getItem","fetch","method","body","then","response","json","console","log","render","width","marginLeft","ref","ref1","uploadInput1","ref2","uploadInput2"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport { Redirect } from 'react-router-dom'\nimport { MDBSwitch } from \"mdbreact\";\n\nclass PostFrontToBack extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            titre: '',\n            description: '',\n            utilisateur: '',\n            prix: '',\n            image: '',\n            date: '',\n            debut: '',\n            duree: '',\n            reserve: '',\n            disponible: '',\n            switch1: true,\n            active: false,\n            modal: false\n        };\n        this.handleChange = this.handleChange.bind(this)\n        this.handleUploadImage = this.handleUploadImage.bind(this);\n        this.renderRedirect = this.renderRedirect.bind(this)\n    }\n\n    renderRedirect = () => {\n        this.setState({\n            modal: !this.state.modal,\n        })\n        return <Redirect to='/admin/article' />\n    }\n\n    toggle = () => {\n        this.handleUploadImage()\n        this.setState({\n            modal: !this.state.modal,\n            titre: '',\n            description: '',\n            utilisateur: '',\n            prix: '',\n            image: '',\n            date: '',\n            debut: '',\n            duree: '',\n            reserve: '',\n            disponible: '',\n            active: false,\n        });\n    }\n\n    handleSwitchChange = nr => () => {\n        let switchNumber = `switch${nr}`;\n        this.setState({\n            [switchNumber]: !this.state[switchNumber]\n        });\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleUploadImage(ev) {\n        const data = new FormData();\n        data.append('image', this.uploadInput.files[0]);\n        data.append('titre', this.state.titre);\n        data.append('description', this.state.description);\n        data.append('prix', this.state.prix);\n        data.append('utilisateur', localStorage.getItem('id'))\n\n        fetch('https://tsiorytahback.herokuapp.com/profil', {\n            // fetch('http://localhost:8080/profil', {\n            method: 'POST',\n            body: data,\n        }).then((response) => {\n            response.json().then((body) => {\n                this.setState({\n                    // image: `http://localhost:8080/profil/${body.image}`,\n                    // image1: `http://localhost:8080/profil/${body.image1}`,\n                    // image2: `http://localhost:8080/profil/${body.image2}`\n                    image: `https://tsiorytahback.herokuapp.com/profil/${body.image}`,\n                });\n                console.log('ity ilay body.fil', body.image);\n            });\n        });\n    }\n\n    render() {\n        return (\n\n            <div className='container fluid w-100'> {/* //DEBUT */}\n\n                <div class=\"card\" style={{ width: \"500px\", marginLeft: \"10%\" }}>\n\n                    <h5 class=\"card-header info-color white-text text-center\">\n                        <strong>NOUVEAU PRODUIT</strong>\n                    </h5>\n\n                    <div class=\"card-body\">\n\n                        <form class=\"text\">\n                            <MDBSwitch checked={this.state.switch1} onChange={this.handleSwitchChange(1)} />\n\n                            <MDBInput label=\"Nom du Produit\" id=\"un\" type=\"text\" className=\"input black-text\" name=\"titre\" value={this.state.value} onChange={this.handleChange} />\n                            <MDBInput label=\"Descriptions\" size=\"lg\" id=\"ml\" type=\"textarea\" rows=\"3\" className=\"input black-text\" name=\"description\" value={this.state.value} onChange={this.handleChange} />\n                            <MDBInput label=\"Prix\" size=\"lg\" id=\"pw\" type=\"number\" className=\"input black-text\" name=\"prix\" value={this.state.value} onChange={this.handleChange} />\n                            <MDBInput label=\"Date\" size=\"lg\" id=\"ml\" type=\"date\" className=\"input black-text\" name=\"date\" value={this.state.value} onChange={this.handleChange} />\n                            <MDBInput label=\"Heure de début\" size=\"lg\" id=\"ml\" type=\"date\" className=\"input black-text\" name=\"debut\" value={this.state.value} onChange={this.handleChange} />\n                            <MDBInput label=\"Durée\" size=\"lg\" id=\"ml\" type=\"number\" className=\"input black-text\" name=\"duree\" value={this.state.value} onChange={this.handleChange} />\n                            <MDBInput label=\"Nombre de places\" size=\"lg\" id=\"ml\" type=\"number\" className=\"input black-text\" name=\"disponible\" value={this.state.value} onChange={this.handleChange} />\n                            <input ref={(ref) => { this.uploadInput = ref; }} type=\"file\" name=\"image\" />\n                            <input ref={(ref1) => { this.uploadInput1 = ref1; }} type=\"file\" name=\"image1\" />\n                            <input ref={(ref2) => { this.uploadInput2 = ref2; }} type=\"file\" name=\"image2\" />\n\n                        </form>\n                    </div>\n                    <MDBContainer>\n                        <MDBBtn onClick={this.toggle}>Ajouter</MDBBtn>\n                        <MDBModal isOpen={this.state.modal}>\n                            <MDBModalHeader>Enregistrement...</MDBModalHeader>\n                            <MDBModalBody><center>Ajout du Produit avec succés</center></MDBModalBody>\n                            <MDBModalFooter>\n                                <MDBBtn color=\"secondary\" onClick={() => { this.renderRedirect() }}>Close</MDBBtn>\n                            </MDBModalFooter>\n                        </MDBModal>\n                    </MDBContainer>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PostFrontToBack;\n\n\n/*\nstate = {\n    switch1: true,\n    switch2: false\n  }\n\n  handleSwitchChange = nr => () => {\n    let switchNumber = `switch${nr}`;\n    this.setState({\n      [switchNumber]: !this.state[switchNumber]\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <MDBSwitch checked={this.state.switch1} onChange={this.handleSwitchChange(1)} />\n        <MDBSwitch checked={this.state.switch2} onChange={this.handleSwitchChange(2)} />\n      </>\n      );\n    }\n  } */"]},"metadata":{},"sourceType":"module"}