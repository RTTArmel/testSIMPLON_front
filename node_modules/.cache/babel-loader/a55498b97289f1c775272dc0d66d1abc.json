{"ast":null,"code":"var _jsxFileName = \"/home/dev/Bureau/Pr\\xE9-testSIMPLON/pre-test_front/src/components/editProfil.jsx\";\nimport React from 'react';\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport { connect } from 'react-redux';\nimport './editProfil.css';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nclass EditProfil extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderRedirect = () => {\n      if (localStorage.getItem('login') == 'true') {\n        return React.createElement(Redirect, {\n          to: \"/admin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        });\n      } else {\n        console.log('test');\n      }\n    };\n\n    this.toggle = () => {\n      this.handleUploadImage();\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.state = {\n      nom: '',\n      email: '',\n      password: '',\n      pwd: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.enregistrement = this.enregistrement.bind(this);\n    this.renderRedirect = this.renderRedirect.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  enregistrement(e) {\n    const action = {\n      type: \"EDIT_PROFIL\",\n      value: e\n    };\n    this.props.dispatch(action);\n    this.renderRedirect();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"totaledit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(MDBInput, {\n      label: \"Nom\",\n      \"black-text\": true,\n      size: \"lg\",\n      icon: \"user\",\n      id: \"un\",\n      type: \"text\",\n      className: \"input\",\n      name: \"nom\",\n      value: this.state.value,\n      placeholder: this.state.nom,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Adresse e-mail\",\n      size: \"lg\",\n      icon: \"at\",\n      id: \"ml\",\n      type: \"email\",\n      className: \"input\",\n      name: \"email\",\n      value: this.state.value,\n      placeholder: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Mots de passe\",\n      size: \"lg\",\n      icon: \"lock\",\n      id: \"pw\",\n      type: \"passWord\",\n      className: \"input\",\n      name: \"password\",\n      value: this.state.value,\n      placeholder: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(MDBInput, {\n      label: \"Confirmer Mots de passe\",\n      size: \"lg\",\n      icon: \"unlock\",\n      id: \"\",\n      type: \"passWord\",\n      className: \"input\",\n      \"data-type\": \"passWord\",\n      name: \"pwd\",\n      value: this.state.value,\n      placeholder: this.state.pwd,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"pass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(MDBBtn, {\n      gradient: \"purple\",\n      className: \"button\",\n      id: \"boutton\",\n      onClick: e => {\n        e.preventDefault();\n        {\n          this.toggle;\n        }\n        console.log('local enregistrement: ', localStorage.getItem('login'));\n        this.enregistrement({\n          nom: this.state.nom,\n          email: this.state.email,\n          password: this.state.password,\n          pwd: this.state.pwd\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Confirmer\"))), React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(MDBModal, {\n      isOpen: this.state.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Enregistrement...\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Ajout du Produit avec succ\\xE9s\")), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"secondary\",\n      onClick: () => {\n        this.renderRedirect();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Close\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    client: state\n  };\n};\n\nexport default connect(mapStateToProps)(EditProfil);\n/*     enregistrement = () => {\n        this.setState({connecte: true})\n        axios.post(\"http://localhost:8080/register\", {\n            nom: this.state.nom,\n            email: this.state.email,\n            password: this.state.password,\n            pwd: this.state.pwd\n        })\n            .then(res => {\n                console.log(\"post ok: res.data \", res.data);\n            })\n            .catch(errr => {\n                console.log(\"connect: \", this.state.connecte);\n                console.log(\"state: \", this.state);\n                console.log(\"erreur post: \", errr);\n\n            })\n    } */","map":{"version":3,"sources":["/home/dev/Bureau/Pr√©-testSIMPLON/pre-test_front/src/components/editProfil.jsx"],"names":["React","MDBContainer","MDBInput","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","connect","Redirect","axios","EditProfil","Component","constructor","props","renderRedirect","localStorage","getItem","console","log","toggle","handleUploadImage","setState","modal","state","nom","email","password","pwd","handleChange","bind","enregistrement","e","target","name","value","action","type","dispatch","render","preventDefault","mapStateToProps","client"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MDBContainer, MDBInput, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\nimport { connect } from 'react-redux'\nimport './editProfil.css'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\n\nclass EditProfil extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { nom: '', email: '', password: '', pwd: '' }\n        this.handleChange = this.handleChange.bind(this)\n        this.enregistrement = this.enregistrement.bind(this)\n        this.renderRedirect = this.renderRedirect.bind(this)\n    }\n\n    renderRedirect = () => {\n        if(localStorage.getItem('login')=='true'){\n            return <Redirect to='/admin' />\n        } else {\n            console.log('test');\n        }\n        \n    }\n\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    enregistrement(e) {\n        const action = { type: \"EDIT_PROFIL\", value: e }\n        this.props.dispatch(action) \n        this.renderRedirect()  \n    }\n\n    toggle = () => {\n        this.handleUploadImage()\n        this.setState({\n            modal: !this.state.modal,\n            });\n    }\n\n    render() {\n        return (\n            <div id=\"totaledit\">\n                {/* formulaire inscription  */}\n                <form>\n                    <div className=\"form-group\">                                                        \n                        <MDBInput label=\"Nom\" black-text size=\"lg\" icon=\"user\" id=\"un\" type=\"text\" className=\"input\" name=\"nom\" value={this.state.value} placeholder={this.state.nom} onChange={this.handleChange} />\n                        <MDBInput label=\"Adresse e-mail\" size=\"lg\" icon=\"at\" id=\"ml\" type=\"email\" className=\"input\" name=\"email\" value={this.state.value} placeholder={this.state.email} onChange={this.handleChange} />\n                        <MDBInput label=\"Mots de passe\" size=\"lg\" icon=\"lock\" id=\"pw\" type=\"passWord\" className=\"input\" name=\"password\" value={this.state.value} placeholder={this.state.password} onChange={this.handleChange} />\n                        <MDBInput label=\"Confirmer Mots de passe\" size=\"lg\" icon=\"unlock\"  id=\"\" type=\"passWord\" className=\"input\" data-type=\"passWord\" name=\"pwd\" value={this.state.value} placeholder={this.state.pwd} onChange={this.handleChange} />\n                    <p id='pass'></p>\n                        <MDBBtn gradient=\"purple\" className=\"button\" id=\"boutton\"  onClick={e => {\n                    e.preventDefault()\n                    {this.toggle}\n                    console.log('local enregistrement: ', localStorage.getItem('login'));\n                    this.enregistrement({\n                        nom: this.state.nom,\n                        email: this.state.email,\n                        password: this.state.password,\n                        pwd: this.state.pwd\n                    })\n                }}>Confirmer</MDBBtn>\n                    </div>\n                </form>\n                <MDBContainer>\n                        <MDBModal isOpen={this.state.modal}>\n                            <MDBModalHeader>Enregistrement...</MDBModalHeader>\n                            <MDBModalBody><center>Ajout du Produit avec succ√©s</center></MDBModalBody>\n                            <MDBModalFooter>\n                                <MDBBtn color=\"secondary\" onClick={()=>{this.renderRedirect()}}>Close</MDBBtn>\n                            </MDBModalFooter>\n                        </MDBModal>\n                    </MDBContainer>\n            </div>\n\n                                        \n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        client: state\n    }\n}\nexport default connect(mapStateToProps)(EditProfil)\n\n\n\n    /*     enregistrement = () => {\n            this.setState({connecte: true})\n            axios.post(\"http://localhost:8080/register\", {\n                nom: this.state.nom,\n                email: this.state.email,\n                password: this.state.password,\n                pwd: this.state.pwd\n            })\n                .then(res => {\n                    console.log(\"post ok: res.data \", res.data);\n                })\n                .catch(errr => {\n                    console.log(\"connect: \", this.state.connecte);\n                    console.log(\"state: \", this.state);\n                    console.log(\"erreur post: \", errr);\n    \n                })\n        } */"]},"metadata":{},"sourceType":"module"}